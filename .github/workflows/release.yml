name: Publish release

on:
  workflow_dispatch:

jobs:
  publish-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: 11
      - name: Set version env variable
        run: echo "VERSION=$((grep -w 'version' | cut -d= -f2) < gradle.properties | rev | cut --complement -d- -f1 | rev)" >> $GITHUB_ENV
      - name: Pre release branch checkout
        env:
          GITHUB_TOKEN: ${{ secrets.BALLERINA_BOT_TOKEN }}
        run: |
          echo "Version: ${VERSION}"
          git config user.name ${{ secrets.BALLERINA_BOT_USERNAME }}
          git config user.email ${{ secrets.BALLERINA_BOT_EMAIL }}
          git checkout -b release-${VERSION}
      - name: Github Packages Publish
        env:
          GITHUB_TOKEN: ${{ secrets.BALLERINA_BOT_TOKEN }}
          publishUser: ${{ secrets.BALLERINA_BOT_USERNAME }}
          publishPAT: ${{ secrets.BALLERINA_BOT_TOKEN }}
        run: |
          ./gradlew release -Prelease.useAutomaticVersion=true
          ./gradlew -Pversion=${VERSION} publish -x test
      - name: Github Release and Release Sync PR
        env:
          GITHUB_TOKEN: ${{ secrets.BALLERINA_BOT_TOKEN }}
        run: |
          gh release create v$VERSION --title "plugin-gradle-v$VERSION"
          gh pr create --base main --title "[Automated] Sync main after $VERSION release" --body "Sync main after $VERSION release"
#      - name: Gradle publish
#        env:
#          GRADLE_OPTS: "-Dorg.gradle.project.gradle.publish.key=${{ secrets.GRADLE_PLUGIN_KEY }} -Dorg.gradle.project.gradle.publish.secret=${{ secrets.GRADLE_PLUGIN_SECRET }}"
#        run: ./gradlew publishPlugins
